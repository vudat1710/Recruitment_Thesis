{"ast":null,"code":"var _jsxFileName = \"/home/vudat1710/Downloads/Thesis/Recruitment_Thesis/web_app/src/components/HOC/AutoCompleteText.jsx\";\nimport React from 'react'; // import './AutoCompleteText.scss'\n\nexport default class AutoCompleteText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const {\n        items\n      } = this.props;\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(`${value}`, 'i');\n        suggestions = items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n      this.props.getChildState({ ...this.state,\n        text: value\n      });\n    };\n\n    this.state = {\n      suggestions: [],\n      text: '',\n      name: '',\n      placeholder: ''\n    };\n  }\n\n  componentDidMount() {\n    const name = this.props.name;\n    const placeholder = this.props.placeholder;\n    this.setState({ ...this.state,\n      name: name,\n      placeholder: placeholder\n    });\n    this.props.getChildState({ ...this.state,\n      name\n    });\n  }\n\n  renderSuggestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    const suggestions_ = suggestions.slice(0, 5);\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, suggestions_.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 47\n      }\n    }, item)));\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n    this.props.getChildState({ ...this.state,\n      text: value\n    });\n  }\n\n  render() {\n    const {\n      text\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AutoCompleteText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      value: text,\n      onChange: this.onTextChanged,\n      type: \"text\",\n      placeholder: this.state.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["/home/vudat1710/Downloads/Thesis/Recruitment_Thesis/web_app/src/components/HOC/AutoCompleteText.jsx"],"names":["React","AutoCompleteText","Component","constructor","props","onTextChanged","e","items","value","target","suggestions","length","regex","RegExp","sort","filter","v","test","setState","text","getChildState","state","name","placeholder","componentDidMount","renderSuggestions","suggestions_","slice","map","item","suggestionSelected","render"],"mappings":"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","sourcesContent":["import React from 'react';\n// import './AutoCompleteText.scss'\n\nexport default class AutoCompleteText extends React.Component{\n  constructor (props){\n      super(props);\n          this.state = {\n              suggestions: [],\n              text : '',\n              name: '',\n              placeholder: '',\n          }; \n      }\n\n      componentDidMount() {\n        const name = this.props.name;\n        const placeholder = this.props.placeholder;\n        this.setState({\n            ...this.state,\n            name: name,\n            placeholder: placeholder\n        })\n        this.props.getChildState({ \n            ...this.state,\n            name\n        });\n      }\n\n      \n\n      onTextChanged = (e) => {\n          const {items} = this.props;\n          const value = e.target.value;\n          let suggestions = [];\n          if (value.length > 0){\n              const regex = new RegExp(`${value}`,'i');\n              suggestions = items.sort().filter(v => regex.test(v));\n          }\n          this.setState(() => ({suggestions, text: value}));\n          this.props.getChildState({\n            ...this.state,\n            text: value,\n        });\n      }\n      renderSuggestions () {\n          const {suggestions} = this.state;\n          if (suggestions.length === 0){\n              return null;\n          }\n          const suggestions_ = suggestions.slice(0,5);\n          return (\n              <ul>\n                  {suggestions_.map((item) => <li onClick ={() => this.suggestionSelected(item)}>{item}</li>)}\n              </ul>\n          )\n      }\n      suggestionSelected (value) {\n          this.setState(() => ({\n              text : value,\n              suggestions : [],\n          }))\n          this.props.getChildState({\n            ...this.state,\n            text: value,\n        });\n      }\n\n      render(){\n          const {text} = this.state;\n          return(\n              <div className=\"AutoCompleteText\">\n                  <input className=\"form-control\" value = {text} onChange = {this.onTextChanged} type=\"text\" placeholder={this.state.placeholder}/>\n                  {this.renderSuggestions()}\n              </div>\n          )\n      }\n\n}"]},"metadata":{},"sourceType":"module"}